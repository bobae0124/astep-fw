


/*
    Generated by HDL Build
*/
module astep24_3l_gecco_top (
    input  wire				btnc,
    input  wire				btnd,
    input  wire				btnl,
    input  wire				btnr,
    input  wire				btnu,
    output wire				clk_sample_n,
    output wire				clk_sample_p,
    output wire				clk_sample_se,
    output wire				clk_timestamp,
    input  wire				cpu_resetn,
    
    output wire				ext_adc_spi_csn,
    input  wire				ext_adc_spi_miso,
    output wire				ext_dac_spi_csn,
    output wire				ext_spi_clk,
    output wire				ext_spi_mosi,

    output wire				gecco_inj_n,
    output wire				gecco_inj_p,
    output wire				gecco_sr_ctrl_ck_n,
    output wire				gecco_sr_ctrl_ck_p,
    output wire				gecco_sr_ctrl_ld_n,
    output wire				gecco_sr_ctrl_ld_p,
    output wire				gecco_sr_ctrl_sin_n,
    output wire				gecco_sr_ctrl_sin_p,

    output wire				gecco_sr_ctrl_ck,
    output wire				gecco_sr_ctrl_ld,
    output wire				gecco_sr_ctrl_sin,

    output wire				layer_0_hold,
    input  wire				layer_0_interruptn,
    output wire				layer_0_resn,
    output wire				layer_0_spi_clk,
    input  wire [1:0]		layer_0_spi_miso,
    output wire				layer_0_spi_mosi,
    output wire				layers_spi_csn,

    input  wire				layer_0_spi_right_clk,
    input  wire				layer_0_spi_right_csn,
    output wire [1:0]		layer_0_spi_right_miso,
    input  wire				layer_0_spi_right_mosi,
    
    output wire             layers_inj,

    `ifndef config_singleended
    output wire				layers_sr_ck1_n,
    output wire				layers_sr_ck1_p,
    output wire				layers_sr_ck2_n,
    output wire				layers_sr_ck2_p,
    output wire				layers_sr_ld_n,
    output wire				layers_sr_ld_p,
    output wire				layers_sr_sin_n,
    output wire				layers_sr_sin_p,
    `else 
    output wire				layers_sr_ck1,
    output wire				layers_sr_ck2,
    output wire				layers_sr_ld,
    output wire				layers_sr_sin,
    `endif
    
    output wire				layers_sr_rb,
    input  wire				layers_sr_sout,
    output wire [7:0]		led,
    output wire [1:0]		set_vadj,
    input  wire				spi_clk,
    input  wire				spi_csn,
    output wire				spi_miso,
    input  wire				spi_mosi,
    input  wire [7:0]		sw,
    input  wire				sysclk,
    output wire				uart_rx_out,
    input  wire				uart_tx_in,
    output wire				vadj_en
);

    // Connections
    //----------------
    wire clk_sample; // size=1
    //wire gecco_sr_ctrl_ck; // size=1
    //wire gecco_sr_ctrl_sin; // size=1

    `ifndef config_singleended
    wire layers_sr_ck1; // size=1
    wire layers_sr_ck2; // size=1
    wire layers_sr_ld; // size=1
    wire layers_sr_sin; // size=1
    `endif 

    // Sections
    //---------------

    assign vadj_en      = 1;
    assign set_vadj[1]  = 0;
    assign set_vadj[0]  = 1;
        

    assign layer_0_spi_right_miso = 2'b00;
    

    // Instances
    //------------
        
    // Module Instance
    // verilator lint_off DECLFILENAME 
    // verilator lint_off UNDRIVEN
    astep24_3l_top  astep24_3l_top_I(
        .clk_sample(clk_sample),
        .clk_timestamp(clk_timestamp),
        .cold_resn(1'd1),
        .ext_adc_spi_csn(ext_adc_spi_csn),
        .ext_adc_spi_miso(ext_adc_spi_miso),
        .ext_dac_spi_csn(ext_dac_spi_csn),
        .ext_spi_clk(ext_spi_clk),
        .ext_spi_mosi(ext_spi_mosi),
        .io_aresn(/* WAIVED: User requested no connection during wrapping */),
        .layer_0_hold(layer_0_hold),
        .layer_0_interruptn(layer_0_interruptn),
        .layer_0_resn(layer_0_resn),
        .layer_0_spi_clk(layer_0_spi_clk),
        .layer_0_spi_csn(/* WAIVED: User requested no connection during wrapping */),
        .layer_0_spi_miso(layer_0_spi_miso),
        .layer_0_spi_mosi(layer_0_spi_mosi),
        .layer_1_hold(/* WAIVED: User requested no connection during wrapping */),
        .layer_1_interruptn(1'd1),
        .layer_1_resn(/* WAIVED: User requested no connection during wrapping */),
        .layer_1_spi_clk(/* WAIVED: User requested no connection during wrapping */),
        .layer_1_spi_csn(/* WAIVED: User requested no connection during wrapping */),
        .layer_1_spi_miso(2'd0),
        .layer_1_spi_mosi(/* WAIVED: User requested no connection during wrapping */),
        .layer_2_hold(/* WAIVED: User requested no connection during wrapping */),
        .layer_2_interruptn(1'd1),
        .layer_2_resn(/* WAIVED: User requested no connection during wrapping */),
        .layer_2_spi_clk(/* WAIVED: User requested no connection during wrapping */),
        .layer_2_spi_csn(/* WAIVED: User requested no connection during wrapping */),
        .layer_2_spi_miso(2'd0),
        .layer_2_spi_mosi(/* WAIVED: User requested no connection during wrapping */),
        .layers_spi_csn(layers_spi_csn),
        .layers_inj(layers_inj),
        .layers_sr_in_rb(layers_sr_rb),
        .layers_sr_in_sout0(layers_sr_sout),
        .layers_sr_in_sout1(1'd0),
        .layers_sr_in_sout2(1'd0),
        .layers_sr_out_ck1(layers_sr_ck1),
        .layers_sr_out_ck2(layers_sr_ck2),
        .layers_sr_out_ld0(layers_sr_ld),
        .layers_sr_out_ld1(/* WAIVED: User requested no connection during wrapping */),
        .layers_sr_out_ld2(/* WAIVED: User requested no connection during wrapping */),
        .layers_sr_out_sin(layers_sr_sin),
        .rfg_io_led(led),
        .spi_clk(spi_clk),
        .spi_csn(spi_csn),
        .spi_miso(spi_miso),
        .spi_mosi(spi_mosi),
        .sysclk(sysclk),
        .uart_rx(uart_tx_in),
        .uart_tx(uart_rx_out),
        .warm_resn(cpu_resetn),
        .gecco_sr_ctrl_ck(gecco_sr_ctrl_ck),
        .gecco_sr_ctrl_sin(gecco_sr_ctrl_sin),
        .gecco_sr_ctrl_ld(gecco_sr_ctrl_ld)
    );
            
    
    OBUFDS  #( .IOSTANDARD("LVDS_25")  )  clk_sample_odiff(
        .I(clk_sample),
        .O(clk_sample_p),
        .OB(clk_sample_n)
    );
            
    OBUF  #( .IOSTANDARD("LVDS_25")  )  clk_sample_se_ose(
        .I(clk_sample),
        .O(clk_sample_se)
    );
    OBUFDS  #( .IOSTANDARD("LVDS_25")  )  gecco_sr_ctrl_ck_odiff(
        .I(gecco_sr_ctrl_ck),
        .O(gecco_sr_ctrl_ck_p),
        .OB(gecco_sr_ctrl_ck_n)
    );
    OBUFDS  #( .IOSTANDARD("LVDS_25")  )  gecco_sr_ctrl_ld_odiff(
        .I(gecco_sr_ctrl_ld),
        .O(gecco_sr_ctrl_ld_p),
        .OB(gecco_sr_ctrl_ld_n)
    );
    OBUFDS  #( .IOSTANDARD("LVDS_25")  ) gecco_sr_ctrl_sin_odiff(
        .I(gecco_sr_ctrl_sin),
        .O(gecco_sr_ctrl_sin_p),
        .OB(gecco_sr_ctrl_sin_n)
    );
    OBUFDS  #( .IOSTANDARD("LVDS_25")  )  gecco_inj_odiff(
        .I(layer_0_inj),
        .O(gecco_inj_p),
        .OB(gecco_inj_n)
    );
    
    // Config Interface: Can be Differential or Single ended depending on the Gecco Soldered Receivers
    `ifndef config_singleended
    OBUFDS  layers_sr_ck1_odiff(
        .I(layers_sr_ck1),
        .O(layers_sr_ck1_p),
        .OB(layers_sr_ck1_n)
    );
            
    
   
    OBUFDS  layers_sr_ck2_odiff(
        .I(layers_sr_ck2),
        .O(layers_sr_ck2_p),
        .OB(layers_sr_ck2_n)
    );
            
    

    OBUFDS  layers_sr_ld_odiff(
        .I(layers_sr_ld),
        .O(layers_sr_ld_p),
        .OB(layers_sr_ld_n)
    );
            
  
    OBUFDS  layers_sr_sin_odiff(
        .I(layers_sr_sin),
        .O(layers_sr_sin_p),
        .OB(layers_sr_sin_n)
    );
    `endif
            
   
  
                

endmodule

        
