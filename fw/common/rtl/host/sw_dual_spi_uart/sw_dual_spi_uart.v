


/*
    Generated by HDL Build
*/
module sw_dual_spi_uart(
    input  wire				clk_core,
    input  wire				clk_core_resn,
    input  wire				clk_uart,
    input  wire				clk_uart_resn,
    output wire [7:0]		rfg_address,
    output wire				rfg_read,
    input  wire				rfg_read_valid,
    input  wire [7:0]		rfg_read_value,
    output wire				rfg_write,
    output wire				rfg_write_last,
    output wire [7:0]		rfg_write_value,
    input  wire				spi_clk,
    input  wire				spi_csn,
    output wire				spi_miso,
    input  wire				spi_mosi,
    input  wire				uart_rx,
    output wire				uart_tx
);

    // Connections
    //----------------
    wire sw_switch_m_axis_1_tvalid; // size=1
    wire [7:0] sw_switch_m_axis_1_tdata; // size=8
    wire sw_switch_m_axis_1_tready; // size=1
    wire sw_switch_m_axis_1_tlast; // size=1
    wire [7:0] sw_switch_m_axis_1_tid; // size=8
    wire [7:0] sw_switch_m_axis_1_tdest; // size=8
    wire sw_switch_s_axis_1_tvalid; // size=1
    wire [7:0] sw_switch_s_axis_1_tdata; // size=8
    wire sw_switch_s_axis_1_tlast; // size=1
    wire [7:0] sw_switch_s_axis_1_tid; // size=8
    wire [7:0] sw_switch_s_axis_1_tdest; // size=8
    wire sw_switch_s_axis_1_tready; // size=1
    wire sw_switch_m_axis_2_tvalid; // size=1
    wire [7:0] sw_switch_m_axis_2_tdata; // size=8
    wire sw_switch_m_axis_2_tready; // size=1
    wire sw_switch_m_axis_2_tlast; // size=1
    wire [7:0] sw_switch_m_axis_2_tid; // size=8
    wire [7:0] sw_switch_m_axis_2_tdest; // size=8
    wire sw_switch_s_axis_2_tvalid; // size=1
    wire [7:0] sw_switch_s_axis_2_tdata; // size=8
    wire sw_switch_s_axis_2_tlast; // size=1
    wire [7:0] sw_switch_s_axis_2_tid; // size=8
    wire [7:0] sw_switch_s_axis_2_tdest; // size=8
    wire sw_switch_s_axis_2_tready; // size=1
    wire sw_switch_m_axis_0_tvalid; // size=1
    wire [7:0] sw_switch_m_axis_0_tdata; // size=8
    wire sw_switch_m_axis_0_tready; // size=1
    wire sw_switch_m_axis_0_tlast; // size=1
    wire sw_switch_m_axis_0_tuser; // size=1
    wire [7:0] sw_switch_m_axis_0_tid; // size=8
    wire [7:0] sw_switch_m_axis_0_tdest; // size=8
    wire sw_switch_s_axis_0_tvalid; // size=1
    wire [7:0] sw_switch_s_axis_0_tdata; // size=8
    wire sw_switch_s_axis_0_tlast; // size=1
    wire sw_switch_s_axis_0_tuser; // size=1
    wire [7:0] sw_switch_s_axis_0_tid; // size=8
    wire [7:0] sw_switch_s_axis_0_tdest; // size=8
    wire sw_switch_s_axis_0_tready; // size=1 

    // Sections
    //---------------


    // Instances
    //------------
        
    // Module Instance
    sw_switch  sw_switch(
        .clk(clk_core),
        .m_axis_0_tdata(sw_switch_m_axis_0_tdata),
        .m_axis_0_tdest(sw_switch_m_axis_0_tdest),
        .m_axis_0_tid(sw_switch_m_axis_0_tid),
        .m_axis_0_tlast(sw_switch_m_axis_0_tlast),
        .m_axis_0_tready(sw_switch_m_axis_0_tready),
        .m_axis_0_tuser(sw_switch_m_axis_0_tuser),
        .m_axis_0_tvalid(sw_switch_m_axis_0_tvalid),
        .m_axis_1_tdata(sw_switch_m_axis_1_tdata),
        .m_axis_1_tdest(sw_switch_m_axis_1_tdest),
        .m_axis_1_tid(sw_switch_m_axis_1_tid),
        .m_axis_1_tlast(sw_switch_m_axis_1_tlast),
        .m_axis_1_tready(sw_switch_m_axis_1_tready),
        .m_axis_1_tuser(/* WAIVED: User Bus not used */),
        .m_axis_1_tvalid(sw_switch_m_axis_1_tvalid),
        .m_axis_2_tdata(sw_switch_m_axis_2_tdata),
        .m_axis_2_tdest(sw_switch_m_axis_2_tdest),
        .m_axis_2_tid(sw_switch_m_axis_2_tid),
        .m_axis_2_tlast(sw_switch_m_axis_2_tlast),
        .m_axis_2_tready(sw_switch_m_axis_2_tready),
        .m_axis_2_tuser(/* WAIVED: User Bus not used */),
        .m_axis_2_tvalid(sw_switch_m_axis_2_tvalid),
        .resn(clk_core_resn),
        .s_axis_0_tdata(sw_switch_s_axis_0_tdata),
        .s_axis_0_tdest(sw_switch_s_axis_0_tdest),
        .s_axis_0_tid(sw_switch_s_axis_0_tid),
        .s_axis_0_tlast(sw_switch_s_axis_0_tlast),
        .s_axis_0_tready(sw_switch_s_axis_0_tready),
        .s_axis_0_tuser(sw_switch_s_axis_0_tuser),
        .s_axis_0_tvalid(sw_switch_s_axis_0_tvalid),
        .s_axis_1_tdata(sw_switch_s_axis_1_tdata),
        .s_axis_1_tdest(sw_switch_s_axis_1_tdest),
        .s_axis_1_tid(sw_switch_s_axis_1_tid),
        .s_axis_1_tlast(sw_switch_s_axis_1_tlast),
        .s_axis_1_tready(sw_switch_s_axis_1_tready),
        .s_axis_1_tuser(/* WAIVED: User Bus not used */),
        .s_axis_1_tvalid(sw_switch_s_axis_1_tvalid),
        .s_axis_2_tdata(sw_switch_s_axis_2_tdata),
        .s_axis_2_tdest(sw_switch_s_axis_2_tdest),
        .s_axis_2_tid(sw_switch_s_axis_2_tid),
        .s_axis_2_tlast(sw_switch_s_axis_2_tlast),
        .s_axis_2_tready(sw_switch_s_axis_2_tready),
        .s_axis_2_tuser(/* WAIVED: User Bus not used */),
        .s_axis_2_tvalid(sw_switch_s_axis_2_tvalid),
        .s_decode_err(/* WAIVED: Switch Error not reportable */)
    );
            
    
    // Module Instance
    uart_path  uart_path(
        .clk_core(clk_core),
        .clk_core_resn(clk_core_resn),
        .clk_uart(clk_uart),
        .clk_uart_resn(clk_uart_resn),
        .m_axis_tdata(sw_switch_s_axis_1_tdata),
        .m_axis_tdest(sw_switch_s_axis_1_tdest),
        .m_axis_tid(sw_switch_s_axis_1_tid),
        .m_axis_tlast(sw_switch_s_axis_1_tlast),
        .m_axis_tready(sw_switch_s_axis_1_tready),
        .m_axis_tvalid(sw_switch_s_axis_1_tvalid),
        .s_axis_tdata(sw_switch_m_axis_1_tdata),
        .s_axis_tdest(sw_switch_m_axis_1_tdest),
        .s_axis_tid(sw_switch_m_axis_1_tid),
        .s_axis_tlast(sw_switch_m_axis_1_tlast),
        .s_axis_tready(sw_switch_m_axis_1_tready),
        .s_axis_tvalid(sw_switch_m_axis_1_tvalid),
        .uart_rx(uart_rx),
        .uart_tx(uart_tx)
    );
            
    
    // Module Instance
    spi_path  spi_path(
        .clk_core(clk_core),
        .clk_core_resn(clk_core_resn),
        .m_axis_tdata(sw_switch_s_axis_2_tdata),
        .m_axis_tdest(sw_switch_s_axis_2_tdest),
        .m_axis_tid(sw_switch_s_axis_2_tid),
        .m_axis_tlast(sw_switch_s_axis_2_tlast),
        .m_axis_tready(sw_switch_s_axis_2_tready),
        .m_axis_tvalid(sw_switch_s_axis_2_tvalid),
        .s_axis_tdata(sw_switch_m_axis_2_tdata),
        .s_axis_tdest(sw_switch_m_axis_2_tdest),
        .s_axis_tid(sw_switch_m_axis_2_tid),
        .s_axis_tlast(sw_switch_m_axis_2_tlast),
        .s_axis_tready(sw_switch_m_axis_2_tready),
        .s_axis_tvalid(sw_switch_m_axis_2_tvalid),
        .spi_clk(spi_clk),
        .spi_csn(spi_csn),
        .spi_miso(spi_miso),
        .spi_mosi(spi_mosi)
    );
            
    
    // Module Instance
    rfg_axis_protocol #(.DATA_WIDTH(8),.ID_WIDTH(8),.USER_WIDTH(1),.AXIS_MASTER_DEST(0)) rfg_protocol(
        .aclk(clk_core),
        .aresetn(clk_core_resn),
        .m_axis_tdata(sw_switch_s_axis_0_tdata),
        .m_axis_tdest(sw_switch_s_axis_0_tdest),
        .m_axis_tid(sw_switch_s_axis_0_tid),
        .m_axis_tlast(sw_switch_s_axis_0_tlast),
        .m_axis_tready(sw_switch_s_axis_0_tready),
        .m_axis_tuser(sw_switch_s_axis_0_tuser),
        .m_axis_tvalid(sw_switch_s_axis_0_tvalid),
        .rfg_address(rfg_address),
        .rfg_read(rfg_read),
        .rfg_read_valid(rfg_read_valid),
        .rfg_read_value(rfg_read_value),
        .rfg_write(rfg_write),
        .rfg_write_last(rfg_write_last),
        .rfg_write_value(rfg_write_value),
        .s_axis_tdata(sw_switch_m_axis_0_tdata),
        .s_axis_tdest(sw_switch_m_axis_0_tdest),
        .s_axis_tid(sw_switch_m_axis_0_tid),
        .s_axis_tlast(sw_switch_m_axis_0_tlast),
        .s_axis_tready(sw_switch_m_axis_0_tready),
        .s_axis_tuser(sw_switch_m_axis_0_tuser),
        .s_axis_tvalid(sw_switch_m_axis_0_tvalid)
    );
                

endmodule

        
