


/*
    Generated by HDL Build
*/
module uart_path(
    input  wire				clk_core,
    input  wire				clk_core_resn,
    input  wire				clk_uart,
    input  wire				clk_uart_resn,
    output wire [7:0]		m_axis_tdata,
    output wire [7:0]		m_axis_tdest,
    output wire [7:0]		m_axis_tid,
    output wire				m_axis_tlast,
    input  wire				m_axis_tready,
    output wire				m_axis_tvalid,
    input  wire [7:0]		s_axis_tdata,
    input  wire [7:0]		s_axis_tdest,
    input  wire [7:0]		s_axis_tid,
    input  wire				s_axis_tlast,
    output wire				s_axis_tready,
    input  wire				s_axis_tvalid,
    input  wire				uart_rx,
    output wire				uart_tx
);

    // Connections
    //----------------
    wire [3:0] uart_core_s_axi_awaddr; // size=4
    wire uart_core_s_axi_awvalid; // size=1
    wire uart_core_s_axi_awready; // size=1
    wire [31:0] uart_core_s_axi_wdata; // size=32
    wire [3:0] uart_core_s_axi_wstrb; // size=4
    wire uart_core_s_axi_wvalid; // size=1
    wire uart_core_s_axi_wready; // size=1
    wire [1:0] uart_core_s_axi_bresp; // size=2
    wire uart_core_s_axi_bvalid; // size=1
    wire uart_core_s_axi_bready; // size=1
    wire [3:0] uart_core_s_axi_araddr; // size=4
    wire uart_core_s_axi_arvalid; // size=1
    wire uart_core_s_axi_arready; // size=1
    wire [31:0] uart_core_s_axi_rdata; // size=32
    wire [1:0] uart_core_s_axi_rresp; // size=2
    wire uart_core_s_axi_rvalid; // size=1
    wire uart_core_s_axi_rready; // size=1
    wire uart_core_interrupt; // size=1
    wire [7:0] uart_driver_m_axis_tdata; // size=8
    wire uart_driver_m_axis_tvalid; // size=1
    wire uart_driver_m_axis_tready; // size=1
    wire [7:0] uart_driver_m_axis_tid; // size=8
    wire [7:0] uart_driver_m_axis_tdest; // size=8
    wire egress_fifo_m_axis_tvalid; // size=1
    wire egress_fifo_m_axis_tready; // size=1
    wire [7:0] egress_fifo_m_axis_tdata; // size=8 

    // Sections
    //---------------


    // Instances
    //------------
        
    // Module Instance
    axi_uartlite_core  uart_core(
        .interrupt(uart_core_interrupt),
        .rx(uart_rx),
        .s_axi_aclk(clk_uart),
        .s_axi_araddr(uart_core_s_axi_araddr),
        .s_axi_aresetn(clk_uart_resn),
        .s_axi_arready(uart_core_s_axi_arready),
        .s_axi_arvalid(uart_core_s_axi_arvalid),
        .s_axi_awaddr(uart_core_s_axi_awaddr),
        .s_axi_awready(uart_core_s_axi_awready),
        .s_axi_awvalid(uart_core_s_axi_awvalid),
        .s_axi_bready(uart_core_s_axi_bready),
        .s_axi_bresp(uart_core_s_axi_bresp),
        .s_axi_bvalid(uart_core_s_axi_bvalid),
        .s_axi_rdata(uart_core_s_axi_rdata),
        .s_axi_rready(uart_core_s_axi_rready),
        .s_axi_rresp(uart_core_s_axi_rresp),
        .s_axi_rvalid(uart_core_s_axi_rvalid),
        .s_axi_wdata(uart_core_s_axi_wdata),
        .s_axi_wready(uart_core_s_axi_wready),
        .s_axi_wstrb(uart_core_s_axi_wstrb),
        .s_axi_wvalid(uart_core_s_axi_wvalid),
        .tx(uart_tx)
    );
            
    
    // Module Instance
    uart_lite_driver #(.DEST_WIDTH(8),.ID_WIDTH(8),.USER_WIDTH(1),.DATA_WIDTH(8),.C_M_AXI_ADDR_WIDTH(4),.C_M_AXI_DATA_WIDTH(32),.AXIS_DEST(0),.AXIS_SOURCE(1)) uart_driver(
        .M_AXI_ARADDR(uart_core_s_axi_araddr),
        .M_AXI_ARREADY(uart_core_s_axi_arready),
        .M_AXI_ARVALID(uart_core_s_axi_arvalid),
        .M_AXI_AWADDR(uart_core_s_axi_awaddr),
        .M_AXI_AWREADY(uart_core_s_axi_awready),
        .M_AXI_AWVALID(uart_core_s_axi_awvalid),
        .M_AXI_BREADY(uart_core_s_axi_bready),
        .M_AXI_BRESP(uart_core_s_axi_bresp),
        .M_AXI_BVALID(uart_core_s_axi_bvalid),
        .M_AXI_RDATA(uart_core_s_axi_rdata),
        .M_AXI_RREADY(uart_core_s_axi_rready),
        .M_AXI_RRESP(uart_core_s_axi_rresp),
        .M_AXI_RVALID(uart_core_s_axi_rvalid),
        .M_AXI_WDATA(uart_core_s_axi_wdata),
        .M_AXI_WREADY(uart_core_s_axi_wready),
        .M_AXI_WSTRB(uart_core_s_axi_wstrb),
        .M_AXI_WVALID(uart_core_s_axi_wvalid),
        .aclk(clk_uart),
        .aresetn(clk_uart_resn),
        .interrupt_uart(uart_core_interrupt),
        .m_axis_tdata(uart_driver_m_axis_tdata),
        .m_axis_tdest(uart_driver_m_axis_tdest),
        .m_axis_tid(uart_driver_m_axis_tid),
        .m_axis_tready(uart_driver_m_axis_tready),
        .m_axis_tvalid(uart_driver_m_axis_tvalid),
        .s_axis_tdata(egress_fifo_m_axis_tdata),
        .s_axis_tready(egress_fifo_m_axis_tready),
        .s_axis_tvalid(egress_fifo_m_axis_tvalid),
        .uart_got_byte(/* WAIVED: Helper bus not used */),
        .uart_init_done(/* WAIVED: Helper bus not used */),
        .uart_rcv_byte(/* WAIVED: Helper bus not used */)
    );
            
    
    // Module Instance
    fifo_axis_2clk_sw_io_16e  igress_fifo(
        .m_axis_aclk(clk_core),
        .m_axis_tdata(m_axis_tdata),
        .m_axis_tdest(m_axis_tdest),
        .m_axis_tid(m_axis_tid),
        //.m_axis_tlast(m_axis_tlast),
        .m_axis_tready(m_axis_tready),
        .m_axis_tvalid(m_axis_tvalid),
        .s_axis_aclk(clk_uart),
        .s_axis_aresetn(clk_uart_resn),
        .s_axis_tdata(uart_driver_m_axis_tdata),
        .s_axis_tdest(uart_driver_m_axis_tdest),
        .s_axis_tid(uart_driver_m_axis_tid),
        //.s_axis_tlast(1'd1),
        .s_axis_tready(uart_driver_m_axis_tready),
        .s_axis_tvalid(uart_driver_m_axis_tvalid)
    );
            
    
    // Module Instance
    fifo_axis_2clk_sw_io_16e  egress_fifo(
        .m_axis_aclk(clk_uart),
        .m_axis_tdata(egress_fifo_m_axis_tdata),
        .m_axis_tdest(/*No Connection*/),
        .m_axis_tid(/*No Connection*/),
        //.m_axis_tlast(/*No Connection*/),
        .m_axis_tready(egress_fifo_m_axis_tready),
        .m_axis_tvalid(egress_fifo_m_axis_tvalid),
        .s_axis_aclk(clk_core),
        .s_axis_aresetn(clk_core_resn),
        .s_axis_tdata(s_axis_tdata),
        .s_axis_tdest(s_axis_tdest),
        .s_axis_tid(s_axis_tid),
        //.s_axis_tlast(s_axis_tlast),
        .s_axis_tready(s_axis_tready),
        .s_axis_tvalid(s_axis_tvalid)
    );
                

endmodule

        
