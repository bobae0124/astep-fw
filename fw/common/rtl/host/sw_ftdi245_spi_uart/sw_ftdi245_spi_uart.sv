

`include "axi_ifs.sv" 

/*
    Generated by HDL Build
*/
module sw_ftdi245_spi_uart(
    input  wire				clk_core,
    input  wire				clk_core_resn,
    input  wire				clk_uart,
    input  wire				clk_uart_resn,
    input  wire             clk_ftdi,
    input  wire             clk_ftdi_resn,

    output wire [7:0]		rfg_address,
    output wire				rfg_read,
    input  wire				rfg_read_valid,
    input  wire [7:0]		rfg_read_value,
    output wire				rfg_write,
    output wire				rfg_write_last,
    output wire [7:0]		rfg_write_value,
    input  wire				spi_clk,
    input  wire				spi_csn,
    output wire				spi_miso,
    input  wire				spi_mosi,
    input  wire				uart_rx,
    output wire				uart_tx,

    inout  wire [7:0]       ftdi_data,
    input  wire             ftdi_rxf_n,
    input  wire             ftdi_txe_n,
    output wire             ftdi_rd_n,
    output wire             ftdi_wr_n,
    output wire             ftdi_oe_n
    
);  

    // AXIS Switch connections
    //--------------
    localparam NUM_INTERFACES = 4 ;
    wire [(NUM_INTERFACES*8)-1:0]   switch_m_tdata;
    wire [(NUM_INTERFACES*8)-1:0]   switch_m_tid;
    wire [(NUM_INTERFACES*8)-1:0]   switch_m_tdest;
    wire [NUM_INTERFACES-1:0]       switch_m_tready;
    wire [NUM_INTERFACES-1:0]       switch_m_tvalid;
    wire [NUM_INTERFACES-1:0]       switch_m_tlast;
    

    wire [(NUM_INTERFACES*8)-1:0]   switch_s_tdata;
    wire [(NUM_INTERFACES*8)-1:0]   switch_s_tid;
    wire [(NUM_INTERFACES*8)-1:0]   switch_s_tdest;
    wire [NUM_INTERFACES-1:0]       switch_s_tready;
    wire [NUM_INTERFACES-1:0]       switch_s_tvalid;
    wire [NUM_INTERFACES-1:0]       switch_s_tlast;
    

    //----------------------    
    // UART
    //----------------------
    wire [3:0]  uart_core_s_axi_awaddr;
    wire [3:0]  uart_core_s_axi_araddr;
    wire [3:0]  uart_core_s_axi_wstrb;
    wire [31:0] uart_core_s_axi_rdata;
    wire [31:0] uart_core_s_axi_wdata;
    wire [1:0]  uart_core_s_axi_bresp;
    wire [1:0]  uart_core_s_axi_rresp;
    axi_uartlite_core  uart_core(
        .interrupt(uart_core_interrupt),
        .rx(uart_rx),
        .s_axi_aclk(clk_uart),
        .s_axi_araddr(uart_core_s_axi_araddr),
        .s_axi_aresetn(clk_uart_resn),
        .s_axi_arready(uart_core_s_axi_arready),
        .s_axi_arvalid(uart_core_s_axi_arvalid),
        .s_axi_awaddr(uart_core_s_axi_awaddr),
        .s_axi_awready(uart_core_s_axi_awready),
        .s_axi_awvalid(uart_core_s_axi_awvalid),
        .s_axi_bready(uart_core_s_axi_bready),
        .s_axi_bresp(uart_core_s_axi_bresp),
        .s_axi_bvalid(uart_core_s_axi_bvalid),
        .s_axi_rdata(uart_core_s_axi_rdata),
        .s_axi_rready(uart_core_s_axi_rready),
        .s_axi_rresp(uart_core_s_axi_rresp),
        .s_axi_rvalid(uart_core_s_axi_rvalid),
        .s_axi_wdata(uart_core_s_axi_wdata),
        .s_axi_wready(uart_core_s_axi_wready),
        .s_axi_wstrb(uart_core_s_axi_wstrb),
        .s_axi_wvalid(uart_core_s_axi_wvalid),
        .tx(uart_tx)
    );
    byte_t uart_driver_m_axis_tdata;
    byte_t uart_driver_m_axis_tdest;
    byte_t uart_driver_m_axis_tid;
    byte_t uart_egress_fifo_m_axis_tdata;
    uart_lite_driver #(.AXIS_DEST(0),.AXIS_SOURCE(1)) uart_driver(
        .aclk(clk_uart),
        .aresetn(clk_uart_resn),

        .M_AXI_ARADDR(uart_core_s_axi_araddr),
        .M_AXI_ARREADY(uart_core_s_axi_arready),
        .M_AXI_ARVALID(uart_core_s_axi_arvalid),
        .M_AXI_AWADDR(uart_core_s_axi_awaddr),
        .M_AXI_AWREADY(uart_core_s_axi_awready),
        .M_AXI_AWVALID(uart_core_s_axi_awvalid),
        .M_AXI_BREADY(uart_core_s_axi_bready),
        .M_AXI_BRESP(uart_core_s_axi_bresp),
        .M_AXI_BVALID(uart_core_s_axi_bvalid),
        .M_AXI_RDATA(uart_core_s_axi_rdata),
        .M_AXI_RREADY(uart_core_s_axi_rready),
        .M_AXI_RRESP(uart_core_s_axi_rresp),
        .M_AXI_RVALID(uart_core_s_axi_rvalid),
        .M_AXI_WDATA(uart_core_s_axi_wdata),
        .M_AXI_WREADY(uart_core_s_axi_wready),
        .M_AXI_WSTRB(uart_core_s_axi_wstrb),
        .M_AXI_WVALID(uart_core_s_axi_wvalid),
        
        .interrupt_uart(uart_core_interrupt),

        .m_axis_tdata(uart_driver_m_axis_tdata),
        .m_axis_tdest(uart_driver_m_axis_tdest),
        .m_axis_tid(uart_driver_m_axis_tid),
        .m_axis_tready(uart_driver_m_axis_tready),
        .m_axis_tvalid(uart_driver_m_axis_tvalid),

        .s_axis_tdata(uart_egress_fifo_m_axis_tdata),
        .s_axis_tready(uart_egress_fifo_m_axis_tready),
        .s_axis_tvalid(uart_egress_fifo_m_axis_tvalid),

        .uart_got_byte(/* WAIVED: Helper bus not used */),
        .uart_init_done(/* WAIVED: Helper bus not used */),
        .uart_rcv_byte(/* WAIVED: Helper bus not used */)
    );
    fifo_axis_2clk_sw_io_16e  uart_igress_fifo(

        .m_axis_aclk  (clk_core),
        .m_axis_tready (switch_s_tready[1]),
        .m_axis_tvalid (switch_s_tvalid[1]),
        .m_axis_tdata (switch_s_tdata[15:8]),
        .m_axis_tdest  (switch_s_tdest[15:8]),
        .m_axis_tid    (switch_s_tid[15:8]),
        .m_axis_tlast  (switch_s_tlast[1]),

        .s_axis_aclk(clk_uart),
        .s_axis_aresetn(clk_uart_resn),

        .s_axis_tdata(uart_driver_m_axis_tdata),
        .s_axis_tdest(uart_driver_m_axis_tdest),
        .s_axis_tid(uart_driver_m_axis_tid),
        .s_axis_tready(uart_driver_m_axis_tready),
        .s_axis_tvalid(uart_driver_m_axis_tvalid),
        .s_axis_tlast(1'b1),

        .almost_full(),
        .almost_empty()
    );
    fifo_axis_2clk_sw_io_16e  uart_egress_fifo(

        .m_axis_aclk(clk_uart),

        .m_axis_tdata(uart_egress_fifo_m_axis_tdata),
        .m_axis_tdest(),
        .m_axis_tid(),
        .m_axis_tready(uart_egress_fifo_m_axis_tready),
        .m_axis_tvalid(uart_egress_fifo_m_axis_tvalid),
        .m_axis_tlast(),
        
        .s_axis_aclk(clk_core),
        .s_axis_aresetn(clk_core_resn),

        .s_axis_tvalid(switch_m_tvalid[1]),
        .s_axis_tready(switch_m_tready[1]),   
        .s_axis_tdata(switch_m_tdata[15:8]),  
        .s_axis_tdest(switch_m_tdest[15:8]),
        .s_axis_tid(switch_m_tid[15:8]),
        .s_axis_tlast(switch_m_tlast[1]),

        .almost_full(),
        .almost_empty()
    );


    //----------------------
    // SPI
    //----------------------
    byte_t spi_igress_m_axis_tdata;
    byte_t spi_igress_m_axis_tid;
    byte_t spi_igress_m_axis_tdest;

    byte_t spi_egress_fifo_m_axis_tdata;
    byte_t spi_egress_fifo_m_axis_tid;
    byte_t readout_framing_m_axis_tdata;
    byte_t readout_framing_m_axis_tuser;


    // IGRESS
    spi_slave_axis_igress #(.AXIS_DEST(0),.AXIS_SOURCE(2),.MSB_FIRST(1)) spi_igress(
        .spi_clk(spi_clk),
        .resn(spi_csn),
        .spi_csn(spi_csn),
        .spi_mosi(spi_mosi),

        .m_axis_tdata(spi_igress_m_axis_tdata),
        .m_axis_tdest(spi_igress_m_axis_tdest),
        .m_axis_tid(spi_igress_m_axis_tid),
        .m_axis_tready(spi_igress_m_axis_tready),
        .m_axis_tvalid(spi_igress_m_axis_tvalid),

        .err_overrun(/* WAIVED: Overrun not relevant when CS not used */)
    );      

    fifo_axis_2clk_sw_io_16e  spi_igress_fifo(
        
        .s_axis_aclk(spi_clk),
        .s_axis_aresetn(spi_csn),
        .s_axis_tdata(spi_igress_m_axis_tdata),
        .s_axis_tdest(spi_igress_m_axis_tdest),
        .s_axis_tid(spi_igress_m_axis_tid),
        .s_axis_tready(spi_igress_m_axis_tready),
        .s_axis_tvalid(spi_igress_m_axis_tvalid),
        .s_axis_tlast(1'b1),

        .m_axis_aclk(clk_core),
        .m_axis_tready (switch_s_tready[2]),
        .m_axis_tvalid (switch_s_tvalid[2]),
        .m_axis_tdata (switch_s_tdata[23:16]),
        .m_axis_tdest  (switch_s_tdest[23:16]),
        .m_axis_tid    (switch_s_tid[23:16]),
        .m_axis_tlast  (switch_s_tlast[2]),
        

        .almost_full(),
        .almost_empty()
    );
    fifo_axis_2clk_sw_io_16e  spi_egress_fifo(

        .s_axis_aclk(clk_core),
        .s_axis_aresetn(clk_core_resn),
        .s_axis_tvalid(switch_m_tvalid[2]),
        .s_axis_tready(switch_m_tready[2]),   
        .s_axis_tdata(switch_m_tdata[23:16]),  
        .s_axis_tdest(switch_m_tdest[23:16]),
        .s_axis_tid(switch_m_tid[23:16]), 
        .s_axis_tlast(switch_m_tlast[2]),

        .m_axis_aclk(spi_clk),
        .m_axis_tdata(spi_egress_fifo_m_axis_tdata),
        .m_axis_tid(spi_egress_fifo_m_axis_tid),
        .m_axis_tready(spi_egress_fifo_m_axis_tready),
        .m_axis_tvalid(spi_egress_fifo_m_axis_tvalid),
        .m_axis_tlast(spi_egress_fifo_m_axis_tlast),
        .m_axis_tdest(),

        
        

        .almost_full(),
        .almost_empty()
    );
                
        
    // Egress
    rfg_axis_readout_framing #(.MTU_SIZE(16),.IDLE_BYTE(8'hBC),.START_BYTE(8'hEF)) readout_framing(
        .clk(spi_clk),
        .resn(spi_csn),
        .s_axis_tdata(spi_egress_fifo_m_axis_tdata),
        .s_axis_tid(spi_egress_fifo_m_axis_tid),
        .s_axis_tlast(spi_egress_fifo_m_axis_tlast),
        .s_axis_tready(spi_egress_fifo_m_axis_tready),
        .s_axis_tvalid(spi_egress_fifo_m_axis_tvalid),

        .m_axis_tdata(readout_framing_m_axis_tdata),
        .m_axis_tready(readout_framing_m_axis_tready),
        .m_axis_tuser(readout_framing_m_axis_tuser),
        .m_axis_tvalid(readout_framing_m_axis_tvalid)
    );
    spi_slave_axis_egress #(.ASYNC_RES(1),.MSB_FIRST(1),.MISO_SIZE(1),.MTU_SIZE(16),.USE_CHIP_SELECT(0)) spi_egress(
       
        .s_axis_tdata(readout_framing_m_axis_tdata),
        .s_axis_tready(readout_framing_m_axis_tready),
        .s_axis_tuser(readout_framing_m_axis_tuser),
        .s_axis_tvalid(readout_framing_m_axis_tvalid),

        .spi_clk(spi_clk),
        .resn(spi_csn),
        .spi_csn(spi_csn),
        .spi_miso(spi_miso)
    );


    //----------------------    
    // FTDI
    //----------------------
    byte_t ftdi_egress_s_axis_tdata;
    byte_t ftdi_igress_m_axis_tdata;
    byte_t ftdi_igress_m_axis_tid;
    byte_t ftdi_igress_m_axis_tdest;

    byte_t ftdi_fifo_m_axis_tdata;
    byte_t ftdi_fifo_s_axis_tdata;
    wire ftdi_fifo_m_axis_tvalid;

    ftdi_sync_fifo_axis #(.AXIS_DEST(0),.AXIS_SOURCE(3))  ftdi_sync_fifo_axis_inst (
        .ftdi_clko(clk_ftdi),
        .resn(clk_ftdi_resn),
        .ftdi_txe_n(ftdi_txe_n),
        .ftdi_rxf_n(ftdi_rxf_n),
        .ftdi_rd_n(ftdi_rd_n),
        .ftdi_oe_n(ftdi_oe_n),
        .ftdi_wr_n(ftdi_wr_n),
        .ftdi_data(ftdi_data),

        .m_axis_tdata(ftdi_igress_m_axis_tdata),
        .m_axis_tvalid(ftdi_igress_m_axis_tvalid),
        .m_axis_tready(ftdi_igress_m_axis_tready),
        .m_axis_tdest(ftdi_igress_m_axis_tdest),
        .m_axis_tid(ftdi_igress_m_axis_tid),
        .m_axis_almost_full(ftdi_igress_m_axis_almost_full),

        .s_axis_tdata(ftdi_egress_s_axis_tdata),
        .s_axis_tvalid(ftdi_egress_s_axis_tvalid),
        .s_axis_tready(ftdi_egress_s_axis_tready),
        .s_axis_almost_empty(ftdi_egress_s_axis_almost_empty)
    );
    
    fifo_axis_2clk_sw_io_16e ftdi_igress_fifo (
        
        .s_axis_aresetn(clk_ftdi_resn),  
        .s_axis_aclk(clk_ftdi),        
        .s_axis_tvalid(ftdi_igress_m_axis_tvalid),    
        .s_axis_tready(ftdi_igress_m_axis_tready),   
        .s_axis_tdata(ftdi_igress_m_axis_tdata),   
        .s_axis_tdest(ftdi_igress_m_axis_tdest),
        .s_axis_tid(ftdi_igress_m_axis_tid),
        .s_axis_tlast(1'b1),

        .m_axis_aclk(clk_core),       
        .m_axis_tdata (switch_s_tdata[31:24]),
        .m_axis_tready (switch_s_tready[3]),
        .m_axis_tvalid (switch_s_tvalid[3]),
        .m_axis_tdest  (switch_s_tdest[31:24]),
        .m_axis_tid    (switch_s_tid[31:24]),
        .m_axis_tlast  (switch_s_tlast[3]),

        

        .almost_full(ftdi_igress_m_axis_almost_full),
        .almost_empty()
    );

    fifo_axis_2clk_sw_io_16e ftdi_egress_fifo (

        .s_axis_aresetn(clk_core_resn),  
        .s_axis_aclk(clk_core),      
        .s_axis_tvalid(switch_m_tvalid[3]),
        .s_axis_tready(switch_m_tready[3]),   
        .s_axis_tdata(switch_m_tdata[31:24]),  
        .s_axis_tdest(switch_m_tdest[31:24]),
        .s_axis_tid(switch_m_tid[31:24]), 
        .s_axis_tlast(switch_m_tlast[3]),

        .m_axis_aclk(clk_ftdi),      
        .m_axis_tvalid(ftdi_egress_s_axis_tvalid),  
        .m_axis_tready(ftdi_egress_s_axis_tready), 
        .m_axis_tdata(ftdi_egress_s_axis_tdata),
        .m_axis_tlast(),
        .m_axis_tid(),
        .m_axis_tdest(),

        .almost_full(),
        .almost_empty(ftdi_egress_s_axis_almost_empty)
    );


     //-----------------------------
    // RFG
    //------------------------------
    rfg_axis_protocol  rfg_protocol(
        .aclk(clk_core),
        .aresetn(clk_core_resn),

        .m_axis_tdata(switch_s_tdata[7:0]),
        .m_axis_tdest(switch_s_tdest[7:0]),
        .m_axis_tid(switch_s_tid[7:0]),
        .m_axis_tlast(switch_s_tlast[0]),
        .m_axis_tready(switch_s_tready[0]),
        .m_axis_tvalid(switch_s_tvalid[0]),

        .s_axis_tdata(switch_m_tdata[7:0]),
        .s_axis_tdest(switch_m_tdest[7:0]),
        .s_axis_tid(switch_m_tid[7:0]),
        .s_axis_tready(switch_m_tready[0]),
        .s_axis_tvalid(switch_m_tvalid[0]),

        .rfg_address(rfg_address),
        .rfg_read(rfg_read),
        .rfg_read_valid(rfg_read_valid),
        .rfg_read_value(rfg_read_value),
        .rfg_write(rfg_write),
        .rfg_write_last(rfg_write_last),
        .rfg_write_value(rfg_write_value)
    );

    //----------------------    
    // SWITCH
    //----------------------
    axis_switch_swifs  axis_switch_swifs_I(
        .aclk(clk_core),
        .aresetn(clk_core_resn),

        .m_axis_tdata(switch_m_tdata),
        .m_axis_tdest(switch_m_tdest),
        .m_axis_tid(switch_m_tid),
        .m_axis_tlast(switch_m_tlast),
        .m_axis_tready(switch_m_tready),
        .m_axis_tuser(),
        .m_axis_tvalid(switch_m_tvalid),

        
        .s_axis_tvalid(switch_s_tvalid),
        .s_axis_tready(switch_s_tready),
        .s_axis_tdata(switch_s_tdata),
        .s_axis_tdest(switch_s_tdest),
        .s_axis_tid(switch_s_tid),
        .s_axis_tlast(switch_s_tlast),
        .s_axis_tuser(4'b0000),
        .s_decode_err()
    );

            
    
   
                

endmodule

        
